generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



enum Privilege {
  RO
  RW
  RWC
}

model Company {
  id        Int    @id @default(autoincrement())
  firstname String
  lastname  String
  phone     String
  email     String @unique

  company String
  country String
  city    String

  password String

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  projects  Project[]
  comments  Comment[]
  guests    Invitation[]
}

model Guest {
  id        Int      @id @default(autoincrement())
  firstname String
  lastname  String
  email     String   @unique
  phone     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments Comment[]
  company  Invitation[]
}

model Invitation {
  guest          Guest     @relation(fields: [guestId], references: [id])
  guestId        Int
  company        Company   @relation(fields: [companyId], references: [id])
  companyId      Int
  privilege      Privilege
  authProjects   Json
  createdAt      DateTime  @default(now())
  expirationDate DateTime
  allProjects    Boolean

  @@id([guestId, companyId])
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  companyId Int // Define a foreign key referencing Company
  company   Company @relation(fields: [companyId], references: [id])

  creatorId Int // Nouvelle colonne pour stocker l'ID du cr√©ateur
  resources Resource[]
  Damages   DamageImage[]

  infrastructureId Int?
  infrastructure   Infrastructure? @relation(fields: [infrastructureId], references: [id])

}



model Resource {
  id        Int      @id @default(autoincrement())
  name String
  type      String
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
}
model Infrastructure {
  id                 Int       @id @default(autoincrement())
  name               String
  locationAddress    String?
  constructionDate   DateTime?
  description        String?
  type               String
  country            String?
  city               String?
  span               Int?
  length             Int?
  image             String?
  InspectionProjects Project[]
}
model Comment {
  id Int @id @default(autoincrement())

  description   String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  damageImageId Int?
  DamageImage   DamageImage? @relation(fields: [damageImageId], references: [id])
  companyId     Int?
  company       Company?     @relation(fields: [companyId], references: [id])
  guestId       Int?
  guest         Guest?       @relation(fields: [guestId], references: [id])
}

model DamageImage {
  id                      Int       @id @default(autoincrement())
  type                    String
  dangerDegree            Int?
  description             String?
  position                String?
  videoFrameNumber        Int
  damageImagename         String?
  damageImageCroppedname  String?
  imagesPath              String?
  modelPrediction         Int?
  domageIdModel           Int?
  damageClassIdModel      Int?
  detectionTimestampVideo DateTime?
  projectId               Int
  comments                Comment[]
  project                 Project   @relation(fields: [projectId], references: [id])
}
